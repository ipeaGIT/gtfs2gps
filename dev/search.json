[{"path":"https://ipeagit.github.io/gtfs2gps/dev/articles/intro_to_gtfs2gps.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"gtfs2gps: Converting GTFS data to GPS-like format","text":"Package gtfs2gps allows users convert public transport GTFS data single data.table format GPS-like records, can used various applications running transport simulations scenario analyses. using package, just install GitHub.","code":"install.packages(\"gtfs2gps\")"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/articles/intro_to_gtfs2gps.html","id":"loading-data","dir":"Articles","previous_headings":"","what":"Loading data","title":"gtfs2gps: Converting GTFS data to GPS-like format","text":"loading package, GTFS data can read R using read_gtfs(). function gets zipped GTFS file returns list data.table objects. returning list contains data GTFS file indexed according file names without extension. Note GTFS files loaded R. function loads necessary data spatially temporally handle trips stops, : “shapes.txt”, “stop_times.txt”, “stops.txt”, “trips.txt”, “agency.txt”, “calendar.txt”, “routes.txt”, “frequencies.txt”, last four optional. given GTFS zipped file contain required files read_gtfs() stop error. code filter shape ids `c(“T2-1”, “A141-1”) allow faster execution next scripts. can easily convert data simple feature format plot .  subsetting data, also possible save new GTFS file using write_gtfs(), shown .","code":"library(\"gtfs2gps\") #> gtfs2gps version 2.1-2.9000 is now loaded #> NOTE: All filter functions from gtfs2gps were removed #> Please replace them by similar functions from gtfstools poa <- read_gtfs(system.file(\"extdata/poa.zip\", package =\"gtfs2gps\")) #> Unzipped the following files to /tmp/RtmpU7tg4j/gtfsio: #>   * agency.txt #>   * calendar.txt #>   * routes.txt #>   * shapes.txt #>   * stop_times.txt #>   * stops.txt #>   * trips.txt #> Reading agency #> Reading calendar #> Reading routes #> Reading shapes #> Reading stop_times #> Reading stops #> Reading trips names(poa) #> [1] \"agency\"     \"calendar\"   \"routes\"     \"shapes\"     \"stop_times\" #> [6] \"stops\"      \"trips\" head(poa$trips) #>    route_id service_id    trip_id shape_id #>      <char>     <char>     <char>   <char> #> 1:       T2       T2@1 T2-1@1#520     T2-1 #> 2:       T2       T2@1 T2-1@1#540     T2-1 #> 3:       T2       T2@1 T2-1@1#555     T2-1 #> 4:       T2       T2@1 T2-1@1#610     T2-1 #> 5:       T2       T2@1 T2-1@1#620     T2-1 #> 6:       T2       T2@1 T2-1@1#628     T2-1 object.size(poa) |> format(units = \"Kb\") #> [1] \"1145.7 Kb\" poa_small <- gtfstools::filter_by_shape_id(poa, c(\"T2-1\", \"A141-1\")) object.size(poa_small) |> format(units = \"Kb\") #> [1] \"559.5 Kb\" poa_small_shapes_sf <- gtfs2gps::gtfs_shapes_as_sf(poa_small) poa_small_stops_sf <- gtfs2gps::gtfs_stops_as_sf(poa_small) plot(sf::st_geometry(poa_small_shapes_sf)) plot(sf::st_geometry(poa_small_stops_sf), pch = 20, col = \"red\", add = TRUE) box() temp_gtfs <- tempfile(pattern = 'poa_small', fileext = '.zip')  gtfs2gps::write_gtfs(poa_small, temp_gtfs)"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/articles/intro_to_gtfs2gps.html","id":"converting-to-gps-like-format","dir":"Articles","previous_headings":"","what":"Converting to GPS-like format","title":"gtfs2gps: Converting GTFS data to GPS-like format","text":"convert GTFS GPS-like format, use gtfs2gps(). core function package. takes GTFS zipped file input returns data.table row represents ‘GPS-like’ data point every trip GTFS file. summary, function interpolates space-time position vehicle trip considering network distance average speed stops. function samples timestamp vehicle every 15m15m default, user can set different value spatial_resolution argument. See example . following figure maps first 100 data points sample data processed. can converted simple feature points linestring.  function gtfs2gps() automatically recognizes whether GTFS data brings detailed stop_times.txt information whether frequency.txt GTFS file. sample data GTFS detailed stop_times.txt cab found :","code":"poa_gps <- gtfs2gps(temp_gtfs, spatial_resolution = 100) head(poa_gps) #>    shape_id     trip_id route_type    id timestamp shape_pt_lon shape_pt_lat #>      <char>      <char>      <int> <int>   <ITime>        <num>        <num> #> 1:   A141-1 A141-1@1#30          3     1      <NA>    -51.14692    -30.14979 #> 2:   A141-1 A141-1@1#30          3     2      <NA>    -51.14610    -30.15014 #> 3:   A141-1 A141-1@1#30          3     3  00:30:00    -51.14570    -30.15031 #> 4:   A141-1 A141-1@1#30          3     4  00:30:00    -51.14570    -30.15031 #> 5:   A141-1 A141-1@1#30          3     5  00:30:29    -51.14493    -30.15064 #> 6:   A141-1 A141-1@1#30          3     6  00:30:58    -51.14417    -30.15097 #>    stop_id stop_sequence               speed         dist       cumdist #>     <char>         <int>             <units>      <units>       <units> #> 1:    <NA>            NA 1.000000e-12 [km/h]  0.00000 [m]   0.00000 [m] #> 2:    <NA>            NA           NA [km/h] 87.23608 [m]  87.23608 [m] #> 3:     434             1           NA [km/h] 43.32548 [m] 130.56155 [m] #> 4:     434             1 1.000000e-12 [km/h]  0.00000 [m] 130.56155 [m] #> 5:    <NA>            NA 1.013763e+01 [km/h] 82.11437 [m] 212.67592 [m] #> 6:    <NA>            NA 1.013763e+01 [km/h] 82.11437 [m] 294.79029 [m] #>         cumtime trip_number #>         <units>       <int> #> 1:  0.00000 [s]           1 #> 2:       NA [s]           1 #> 3:       NA [s]           1 #> 4:  0.00000 [s]           1 #> 5: 29.15983 [s]           1 #> 6: 58.31967 [s]           1 poa_gps60 <- poa_gps[1:100, ]  # points poa_gps60_sfpoints <- gps_as_sfpoints(poa_gps60)  # linestring poa_gps60_sflinestring <- gps_as_sflinestring(poa_gps60)  # plot plot(sf::st_geometry(poa_gps60_sfpoints), pch = 20) plot(sf::st_geometry(poa_gps60_sflinestring), col = \"blue\", add = TRUE) box() poa <- system.file(\"extdata/poa.zip\", package =\"gtfs2gps\")  poa_gps <- gtfs2gps(poa, spatial_resolution = 50)  poa_gps_sflinestrig <- gps_as_sfpoints(poa_gps)  plot(sf::st_geometry(poa_gps_sflinestrig[1:200,]))  box()"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/articles/intro_to_gtfs2gps.html","id":"methodological-note","dir":"Articles","previous_headings":"","what":"Methodological note","title":"gtfs2gps: Converting GTFS data to GPS-like format","text":"given trip, function gtfs2gps calculates average speed pair consecutive stops given ratio cumulative network distance S departure time t consecutive pair valid stop_ids (),  Since beginning trip usually starts first stop_id, mean speed calculated shown previous equation information period exist. case, function consider mean speed whole trip. also happens last valid stop_id (N) trips, info + 1 also exist.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/articles/intro_to_gtfs2gps.html","id":"final-remarks","dir":"Articles","previous_headings":"","what":"Final remarks","title":"gtfs2gps: Converting GTFS data to GPS-like format","text":"suggestions want report error, please visit GitHub page package .","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rafael H. M. Pereira. Author. Pedro R. Andrade. Author, maintainer. Joao Bazzo. Author. Daniel Herszenhut. Contributor. Marcin Stepniak. Contributor. Marcus Saraiva. Contributor. Ipea - Institue Applied Economic Research. Copyright holder, funder.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pereira R, Andrade P, Bazzo J (2025). gtfs2gps: Converting Transport Data GTFS Format GPS-Like Records. R package version 2.1-2.9000, https://ipeagit.github.io/gtfs2gps/, https://github.com/ipeaGIT/gtfs2gps.","code":"@Manual{,   title = {gtfs2gps: Converting Transport Data from GTFS Format to GPS-Like Records},   author = {Rafael H. M. Pereira and Pedro R. Andrade and Joao Bazzo},   year = {2025},   note = {R package version 2.1-2.9000, https://ipeagit.github.io/gtfs2gps/},   url = {https://github.com/ipeaGIT/gtfs2gps}, }"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/index.html","id":"gtfs2gps-converting-public-transport-data-from-gtfs-format-to-gps-like-records-","dir":"","previous_headings":"","what":"Converting Transport Data from GTFS Format to GPS-Like Records","title":"Converting Transport Data from GTFS Format to GPS-Like Records","text":". gtfs2gps R package converts public transportation data GTFS format GPS-like records data.frame/data.table, can used various applications running transport simulations scenario analyses. core function package takes GTFS.zip file interpolates space-time position vehicle trip considering network distance average speed stops. output data.table row represents timestamp vehicle given spatial resolution. package also functions subset GTFS data time space convert representations simple feature format. information methods used package can found preprint.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Converting Transport Data from GTFS Format to GPS-Like Records","text":"Please install gtfs2gps package CRAN get stable version.","code":"install.packages(\"gtfs2gps\") library(gtfs2gps)"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/index.html","id":"vignette","dir":"","previous_headings":"","what":"Vignette","title":"Converting Transport Data from GTFS Format to GPS-Like Records","text":"Please see vignette: gtfs2gps: Converting GTFS data GPS format","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/index.html","id":"credits-","dir":"","previous_headings":"","what":"Credits","title":"Converting Transport Data from GTFS Format to GPS-Like Records","text":"gtfs2gps package developed team Institute Applied Economic Research (Ipea) collaboration National Institute Space Research (INPE), Brazil. can cite package : Pereira, R. H. M., Andrade, P. R., & Vieira, J. P. B. (2022). Exploring time geography public transport networks gtfs2gps package. Journal Geographical Systems. https://doi.org/10.1007/s10109-022-00400-x","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/adjust_arrival_departure.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust the arrival and departure times of a GTFS data — adjust_arrival_departure","title":"Adjust the arrival and departure times of a GTFS data — adjust_arrival_departure","text":"GTFS.zip data issues related arrival departure time stops. function makes sure GTFS dis/embarking times stop. stop time row, function applies following steps: 1. `arrival_time` `departure_time`, creates departure_time column summing arrival plus pre-defined `min_lag`. 2. `departure_time` `arrival_time`, creates arrival_time column subtracting pre-defined `min_lag` departure. 3. `arrival_time` `departure_time` difference smaller `min_lag`, reduces `arrival_time` increases `departure_time` difference exactly `min_lag`.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/adjust_arrival_departure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust the arrival and departure times of a GTFS data — adjust_arrival_departure","text":"","code":"adjust_arrival_departure(gtfs_data, min_lag = 20)"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/adjust_arrival_departure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust the arrival and departure times of a GTFS data — adjust_arrival_departure","text":"gtfs_data GTFS data created read_gtfs. min_lag Numeric. Minimum waiting time vehicle arrives stop. can numeric units value can converted seconds. Default 20s.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/adjust_arrival_departure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust the arrival and departure times of a GTFS data — adjust_arrival_departure","text":"GTFS adjusted `arrival_time` `departure_time` data.table `stop_times`.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/adjust_arrival_departure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust the arrival and departure times of a GTFS data — adjust_arrival_departure","text":"","code":"poa <- read_gtfs(system.file(\"extdata/poa.zip\", package=\"gtfs2gps\")) #> Unzipped the following files to /tmp/Rtmpj4RNaK/gtfsio: #>   * agency.txt #>   * calendar.txt #>   * routes.txt #>   * shapes.txt #>   * stop_times.txt #>   * stops.txt #>   * trips.txt #> Reading agency #> Reading calendar #> Reading routes #> Reading shapes #> Reading stop_times #> Reading stops #> Reading trips  poa <- adjust_arrival_departure(poa)"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/adjust_speed.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust the speeds of a gps-like table created with gtfs2gps — adjust_speed","title":"Adjust the speeds of a gps-like table created with gtfs2gps — adjust_speed","text":"GTFS.zip data sets might quality issues, example assuming trip speed unreasonably high (e.g. urban bus running 100 Km/h), cases `timestamp` information might missing route segments. can lead gps-like table `NA` unrealistic `speed` `timestamp` values. function allows user adjust speed trips updates `timestamp` values accordingly. user can adjust problematic speeds either setting custom constant value, considering average valid trips speed (Default). columns `timestamp` `cumtime` updated accordingly.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/adjust_speed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust the speeds of a gps-like table created with gtfs2gps — adjust_speed","text":"","code":"adjust_speed(   gps_data,   min_speed = 2,   max_speed = 80,   new_speed = NULL,   clone = TRUE )"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/adjust_speed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust the speeds of a gps-like table created with gtfs2gps — adjust_speed","text":"gps_data GPS-like data.table created gtfs2gps. min_speed Minimum speed considered valid. can numeric (km/h) units value able converted km/h. Values minimum speed adjusted. Defaults 2 km/h. max_speed Maximum speed considered valid. can numeric (km/h) units value able converted km/h. Values maximum speed adjusted. Defaults 80 km/h. new_speed Speed replace missing values well values outside min_speed max_speed range. can numeric (km/h) units value able converted km/h. default, `new_speed = NULL` function considers average speed entire gps data. clone Use copy gps_data? Defaults TRUE.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/adjust_speed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust the speeds of a gps-like table created with gtfs2gps — adjust_speed","text":"GPS-like data adjusted `speed` values. columns `timestamp` `cumtime` also updated accordingly.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/adjust_speed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust the speeds of a gps-like table created with gtfs2gps — adjust_speed","text":"","code":"poa <- read_gtfs(system.file(\"extdata/poa.zip\", package=\"gtfs2gps\")) |>   gtfstools::filter_by_shape_id(\"T2-1\") |>   gtfstools::filter_by_weekday(c(\"monday\", \"wednesday\")) |>   filter_single_trip() #> Unzipped the following files to /tmp/Rtmpj4RNaK/gtfsio: #>   * agency.txt #>   * calendar.txt #>   * routes.txt #>   * shapes.txt #>   * stop_times.txt #>   * stops.txt #>   * trips.txt #> Reading agency #> Reading calendar #> Reading routes #> Reading shapes #> Reading stop_times #> Reading stops #> Reading trips  poa_gps <- gtfs2gps(poa) #> Converting shapes to sf objects #> Using 3 CPU cores #> Processing the data #> Some 'speed' values are NA in the returned data. poa_gps_new <- adjust_speed(poa_gps)"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/append_height.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a column with height to GPS data — append_height","title":"Add a column with height to GPS data — append_height","text":"Add column named height GPS data using tif data reference.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/append_height.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a column with height to GPS data — append_height","text":"","code":"append_height(gps, heightfile)"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/append_height.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a column with height to GPS data — append_height","text":"gps GPS data created gtfs2gps(). heightfile pathname tif file height data.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/append_height.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a column with height to GPS data — append_height","text":"GPS data new column named height.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/append_height.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a column with height to GPS data — append_height","text":"","code":"if (FALSE) { # \\dontrun{ # this example takes more than 10s to run  fortaleza <- system.file(\"extdata/fortaleza.zip\", package = \"gtfs2gps\") srtmfile <- system.file(\"extdata/fortaleza-srtm.tif\", package = \"gtfs2gps\")  gtfs <- read_gtfs(fortaleza) |>   gtfstools::filter_by_shape_id(\"shape836-I\") |>   filter_single_trip()   fortaleza_gps <- gtfs2gps(gtfs, spatial_resolution = 500) |> append_height(srtmfile) } # }"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/filter_single_trip.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter GTFS trips in order to have one trip per shape_id — filter_single_trip","title":"Filter GTFS trips in order to have one trip per shape_id — filter_single_trip","text":"Filter GTFS data keeping one trip per shape_id. also removes unnecessary routes stop_times accordingly.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/filter_single_trip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter GTFS trips in order to have one trip per shape_id — filter_single_trip","text":"","code":"filter_single_trip(gtfs_data)"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/filter_single_trip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter GTFS trips in order to have one trip per shape_id — filter_single_trip","text":"gtfs_data list data.tables read using gtfs2gps::reag_gtfs().","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/filter_single_trip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter GTFS trips in order to have one trip per shape_id — filter_single_trip","text":"filtered GTFS data.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/filter_single_trip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter GTFS trips in order to have one trip per shape_id — filter_single_trip","text":"","code":"poa <- read_gtfs(system.file(\"extdata/poa.zip\", package = \"gtfs2gps\")) #> Unzipped the following files to /tmp/Rtmpj4RNaK/gtfsio: #>   * agency.txt #>   * calendar.txt #>   * routes.txt #>   * shapes.txt #>   * stop_times.txt #>   * stops.txt #>   * trips.txt #> Reading agency #> Reading calendar #> Reading routes #> Reading shapes #> Reading stop_times #> Reading stops #> Reading trips  subset <- filter_single_trip(poa)"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/filter_valid_stop_times.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter GTFS data using valid stop times — filter_valid_stop_times","title":"Filter GTFS data using valid stop times — filter_valid_stop_times","text":"Filter GTFS data read using gtfs2gps::read_gtfs(). removes stop_times NA values arrival_time, departure_time, arrival_time_hms. also filters stops routes accordingly.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/filter_valid_stop_times.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter GTFS data using valid stop times — filter_valid_stop_times","text":"","code":"filter_valid_stop_times(gtfs_data)"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/filter_valid_stop_times.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter GTFS data using valid stop times — filter_valid_stop_times","text":"gtfs_data list data.tables read using gtfs2gps::reag_gtfs().","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/filter_valid_stop_times.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter GTFS data using valid stop times — filter_valid_stop_times","text":"filtered GTFS data.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/filter_valid_stop_times.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter GTFS data using valid stop times — filter_valid_stop_times","text":"","code":"poa <- read_gtfs(system.file(\"extdata/poa.zip\", package = \"gtfs2gps\")) #> Unzipped the following files to /tmp/Rtmpj4RNaK/gtfsio: #>   * agency.txt #>   * calendar.txt #>   * routes.txt #>   * shapes.txt #>   * stop_times.txt #>   * stops.txt #>   * trips.txt #> Reading agency #> Reading calendar #> Reading routes #> Reading shapes #> Reading stop_times #> Reading stops #> Reading trips  subset <- filter_valid_stop_times(poa)"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/gps_as_sflinestring.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts a GPS-like data.table to a LineString Simple Feature (sf) object — gps_as_sflinestring","title":"Converts a GPS-like data.table to a LineString Simple Feature (sf) object — gps_as_sflinestring","text":"Every interval GPS data points stops trip_id  converted linestring segment. output assumes constant average speed  consecutive stops.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/gps_as_sflinestring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts a GPS-like data.table to a LineString Simple Feature (sf) object — gps_as_sflinestring","text":"","code":"gps_as_sflinestring(gps)"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/gps_as_sflinestring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts a GPS-like data.table to a LineString Simple Feature (sf) object — gps_as_sflinestring","text":"gps data.table timestamp data.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/gps_as_sflinestring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts a GPS-like data.table to a LineString Simple Feature (sf) object — gps_as_sflinestring","text":"simple feature (sf) object LineString data.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/gps_as_sflinestring.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts a GPS-like data.table to a LineString Simple Feature (sf) object — gps_as_sflinestring","text":"","code":"library(gtfs2gps)  poa <- read_gtfs(system.file(\"extdata/poa.zip\", package = \"gtfs2gps\")) #> Unzipped the following files to /tmp/Rtmpj4RNaK/gtfsio: #>   * agency.txt #>   * calendar.txt #>   * routes.txt #>   * shapes.txt #>   * stop_times.txt #>   * stops.txt #>   * trips.txt #> Reading agency #> Reading calendar #> Reading routes #> Reading shapes #> Reading stop_times #> Reading stops #> Reading trips poa_subset <- gtfstools::filter_by_shape_id(poa, c(\"T2-1\", \"A141-1\")) |>   filter_single_trip()  poa_gps <- gtfs2gps(poa_subset) #> Converting shapes to sf objects #> Using 3 CPU cores #> Processing the data #> Some 'speed' values are NA in the returned data.  poa_gps_sf <- gps_as_sflinestring(poa_gps)"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/gps_as_sfpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert GPS-like data.table to a Simple Feature points object — gps_as_sfpoints","title":"Convert GPS-like data.table to a Simple Feature points object — gps_as_sfpoints","text":"Convert GPS data stored data.table Simple Feature points.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/gps_as_sfpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert GPS-like data.table to a Simple Feature points object — gps_as_sfpoints","text":"","code":"gps_as_sfpoints(gps, crs = 4326)"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/gps_as_sfpoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert GPS-like data.table to a Simple Feature points object — gps_as_sfpoints","text":"gps data.table timestamp data. crs Coordinate Reference System. default value 4326 (latlong WGS84).","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/gps_as_sfpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert GPS-like data.table to a Simple Feature points object — gps_as_sfpoints","text":"simple feature (sf) object point data.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/gps_as_sfpoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert GPS-like data.table to a Simple Feature points object — gps_as_sfpoints","text":"","code":"library(gtfs2gps)  fortaleza <- read_gtfs(system.file(\"extdata/fortaleza.zip\", package = \"gtfs2gps\")) #> Unzipped the following files to /tmp/Rtmpj4RNaK/gtfsio: #>   * agency.txt #>   * calendar.txt #>   * routes.txt #>   * shapes.txt #>   * stop_times.txt #>   * stops.txt #>   * trips.txt #> Reading agency #> Reading calendar #> Reading routes #> Reading shapes #> Reading stop_times #> Reading stops #> Reading trips srtmfile <- system.file(\"extdata/fortaleza-srtm.tif\", package=\"gtfs2gps\")  subset <- fortaleza |>   gtfstools::filter_by_weekday(c(\"monday\", \"wednesday\")) |>   filter_single_trip() |>   gtfstools::filter_by_shape_id(\"shape806-I\")  for_gps <- gtfs2gps(subset) #> Converting shapes to sf objects #> Using 3 CPU cores #> Processing the data for_gps_sf_points <- gps_as_sfpoints(for_gps)"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/gtfs2gps.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert GTFS to GPS-like data given a spatial resolution — gtfs2gps","title":"Convert GTFS to GPS-like data given a spatial resolution — gtfs2gps","text":"Convert GTFS data GPS format sampling points using given spatial resolution. function creates additional points order guarantee two points trip given distance, indicated spatial resolution. possible use future package parallelize execution (use argument plan). function also uses progressr internally show progress bars. See example show progress bar executing function.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/gtfs2gps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert GTFS to GPS-like data given a spatial resolution — gtfs2gps","text":"","code":"gtfs2gps(   gtfs_data,   spatial_resolution = 100,   parallel = TRUE,   ncores = NULL,   strategy = NULL,   filepath = NULL,   compress = FALSE,   snap_method = \"nearest2\",   continue = FALSE,   quiet = FALSE )"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/gtfs2gps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert GTFS to GPS-like data given a spatial resolution — gtfs2gps","text":"gtfs_data path GTFS file converted GPS, GTFS data represented list data.tables. spatial_resolution spatial resolution meters. Default 100m. function creates points order guarantee minimum distance two consecutive points spatial_resolution. given shape two consecutive points distance lower spatial resolution, algorithm remove points. parallel Decides whether function run parallel. Defaults FALSE. TRUE, use cores available minus one using future::plan() strategy \"multisession\" internally. Note possible create plan calling gtfs2gps(). case, use argument. ncores Number cores used parallel execution. `parallel = FALSE`, argument ignored. `parallel = TRUE`, default function uses available cores minus one. strategy argument deprecated. Please use argument plan instead use future::plan() directly. filepath Output file path. default, output returned gtfs2gps finishes. argument set, route saved txt file within filepath, name equals id. case, output returned. See argument compress another option. compress Argument can used filepath. TRUE, compresses output files saving using rds format. Default value FALSE. Note compress guarantees data saved read way created R. compress, txt extension requires data converted ITime string, therefore need manually converted back ITime properly handled gtfs2gps. snap_method method used snap stops route geometry. two available methods: `nearest1` `nearest2`. Defaults `nearest2`. See details info. continue Argument can used filepath. TRUE, skips processing shape identifiers already saved files. useful continue processing GTFS file stopped reason. Default value FALSE. quiet Hide messages processing data? Defaults FALSE.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/gtfs2gps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert GTFS to GPS-like data given a spatial resolution — gtfs2gps","text":"`data.table`, row represents GPS point. following columns returned (units measurement parenthesis): dist cumdist (meters), cumtime (seconds), shape_pt_lon shape_pt_lat (degrees), speed (km/h), timestamp (hh:mm:ss).","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/gtfs2gps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert GTFS to GPS-like data given a spatial resolution — gtfs2gps","text":"creating geometry points given shape id, `gtfs2gps()` function snaps stops route geometry. Two strategies implemented . - `nearest2` method (default) triangulates distance stop two nearest points route geometry decide point stop snapped . stop away route geometry  `spatial_resolution`, algorithm recursively doubles `spatial_resolution` search/snap stops. - `nearest1` method traverses geometry points computing distances first stop. Whenever finds distance stop smaller `spatial_resolution`, stop snapped point. algorithm applies strategy next stop vector stops end. `speed`, `cumdist`, `cumtime` based difference distance time current previous row trip. means first data point first stop trip represens stationary vehicle. `adjust_speed()` function can used post-process output replace eventual `NA` values `speed` column. stop presented two data points trip output. `timestamp` value first data point represents time vehicle arrived stop (corresponding `arrival_time` column `stop_times.txt` file), `timestamp` second data point represents time vehicle departured stop (corresponding `departure_time` column `stop_times.txt` file). second point considers vehicle stationary stop, immediately departing. GTFS feeds report embark/disembark times (`arrival_time` `departure_time` identical stop). case, user can call `adjust_arrival_departure()` function set minimum time vehicle spend stops embark/disembark passengers. avoid division zero, minimum speed vehicles output 1e-12 Km/h, vehicles never completely stopped.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/gtfs2gps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert GTFS to GPS-like data given a spatial resolution — gtfs2gps","text":"","code":"library(gtfs2gps)  gtfs <- read_gtfs(system.file(\"extdata/poa.zip\", package = \"gtfs2gps\")) |>   gtfstools::filter_by_shape_id(\"T2-1\") |>   filter_single_trip() #> Unzipped the following files to /tmp/Rtmpj4RNaK/gtfsio: #>   * agency.txt #>   * calendar.txt #>   * routes.txt #>   * shapes.txt #>   * stop_times.txt #>   * stops.txt #>   * trips.txt #> Reading agency #> Reading calendar #> Reading routes #> Reading shapes #> Reading stop_times #> Reading stops #> Reading trips    poa_gps <- progressr::with_progress(gtfs2gps(gtfs, quiet=TRUE))"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/gtfs_shapes_as_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert GTFS shapes to simple feature object — gtfs_shapes_as_sf","title":"Convert GTFS shapes to simple feature object — gtfs_shapes_as_sf","text":"Convert GTFS shapes data loaded using gtfs2gps::read_gtf() line simple feature (sf).","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/gtfs_shapes_as_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert GTFS shapes to simple feature object — gtfs_shapes_as_sf","text":"","code":"gtfs_shapes_as_sf(gtfs, crs = 4326)"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/gtfs_shapes_as_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert GTFS shapes to simple feature object — gtfs_shapes_as_sf","text":"gtfs GTFS data. crs coordinate reference system represented EPSG code. default value 4326 (latlong WGS84)","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/gtfs_shapes_as_sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert GTFS shapes to simple feature object — gtfs_shapes_as_sf","text":"simple feature (sf) object.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/gtfs_shapes_as_sf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert GTFS shapes to simple feature object — gtfs_shapes_as_sf","text":"","code":"poa <- read_gtfs(system.file(\"extdata/saopaulo.zip\", package = \"gtfs2gps\")) #> Unzipped the following files to /tmp/Rtmpj4RNaK/gtfsio: #>   * agency.txt #>   * calendar.txt #>   * frequencies.txt #>   * routes.txt #>   * shapes.txt #>   * stop_times.txt #>   * stops.txt #>   * trips.txt #> Reading agency #> Reading calendar #> Reading frequencies #> Reading routes #> Reading shapes #> Reading stop_times #> Reading stops #> Reading trips poa_sf <- gtfs_shapes_as_sf(poa)"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/gtfs_stops_as_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert GTFS stops to simple feature object — gtfs_stops_as_sf","title":"Convert GTFS stops to simple feature object — gtfs_stops_as_sf","text":"Convert GTFS stops data loaded using gtfs2gps::read_gtf() point simple feature (sf).","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/gtfs_stops_as_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert GTFS stops to simple feature object — gtfs_stops_as_sf","text":"","code":"gtfs_stops_as_sf(gtfs, crs = 4326)"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/gtfs_stops_as_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert GTFS stops to simple feature object — gtfs_stops_as_sf","text":"gtfs GTFS data. crs coordinate reference system represented EPSG code. default value 4326 (latlong WGS84)","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/gtfs_stops_as_sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert GTFS stops to simple feature object — gtfs_stops_as_sf","text":"simple feature (sf) object.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/gtfs_stops_as_sf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert GTFS stops to simple feature object — gtfs_stops_as_sf","text":"","code":"poa <- read_gtfs(system.file(\"extdata/poa.zip\", package = \"gtfs2gps\")) #> Unzipped the following files to /tmp/Rtmpj4RNaK/gtfsio: #>   * agency.txt #>   * calendar.txt #>   * routes.txt #>   * shapes.txt #>   * stop_times.txt #>   * stops.txt #>   * trips.txt #> Reading agency #> Reading calendar #> Reading routes #> Reading shapes #> Reading stop_times #> Reading stops #> Reading trips poa_shapes <- gtfs_shapes_as_sf(poa) poa_stops <- gtfs_stops_as_sf(poa)"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/read_gtfs.html","id":null,"dir":"Reference","previous_headings":"","what":"Read GTFS data into a list of data.tables — read_gtfs","title":"Read GTFS data into a list of data.tables — read_gtfs","text":"Read files zipped GTFS feed load memory list data.tables. load following files: \"shapes.txt\", \"stop_times.txt\", \"stops.txt\", \"trips.txt\", \"agency.txt\", \"calendar.txt\", \"routes.txt\", \"frequencies.txt\", last four optional. one mandatory files exit, function stop error message.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/read_gtfs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read GTFS data into a list of data.tables — read_gtfs","text":"","code":"read_gtfs(gtfszip, quiet = FALSE)"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/read_gtfs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read GTFS data into a list of data.tables — read_gtfs","text":"gtfszip zipped GTFS data. quiet logical. Whether hide log messages progress bars. Defaults `FALSE`.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/read_gtfs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read GTFS data into a list of data.tables — read_gtfs","text":"list data.tables, index represents respective GTFS file name.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/read_gtfs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read GTFS data into a list of data.tables — read_gtfs","text":"","code":"poa <- read_gtfs(system.file(\"extdata/poa.zip\", package = \"gtfs2gps\")) #> Unzipped the following files to /tmp/Rtmpj4RNaK/gtfsio: #>   * agency.txt #>   * calendar.txt #>   * routes.txt #>   * shapes.txt #>   * stop_times.txt #>   * stops.txt #>   * trips.txt #> Reading agency #> Reading calendar #> Reading routes #> Reading shapes #> Reading stop_times #> Reading stops #> Reading trips"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/remove_invalid.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove invalid objects from GTFS data — remove_invalid","title":"Remove invalid objects from GTFS data — remove_invalid","text":"Remove objects GTFS data used relations required . , agency-routes relation (agency_id), routes-trips relation (route_id), trips-shapes relation (shape_id), trips-frequencies relation (trip_id), trips-stop_times relation (trip_id), stop_times-stops relation (stop_id), trips-calendar relation (service_id), recursively, GTFS data reduce size anymore. example, one agency_id belongs routes agency removed. might cause one cascade removal objects relations originally inconsistency.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/remove_invalid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove invalid objects from GTFS data — remove_invalid","text":"","code":"remove_invalid(gtfs_data, only_essential = TRUE, prompt_invalid = FALSE)"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/remove_invalid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove invalid objects from GTFS data — remove_invalid","text":"gtfs_data list data.tables read using gtfs2gps::reag_gtfs(). only_essential Remove essential files? essential files agency, calendar, routes. Default TRUE, means agency-routes, routes-trips, trips-calendar relations processed restrictions remove objects. prompt_invalid Show invalid objects. Default FALSE.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/remove_invalid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove invalid objects from GTFS data — remove_invalid","text":"subset input GTFS data.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/remove_invalid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove invalid objects from GTFS data — remove_invalid","text":"","code":"poa <- read_gtfs(system.file(\"extdata/poa.zip\", package = \"gtfs2gps\")) #> Unzipped the following files to /tmp/Rtmpj4RNaK/gtfsio: #>   * agency.txt #>   * calendar.txt #>   * routes.txt #>   * shapes.txt #>   * stop_times.txt #>   * stops.txt #>   * trips.txt #> Reading agency #> Reading calendar #> Reading routes #> Reading shapes #> Reading stop_times #> Reading stops #> Reading trips object.size(poa) #> 1173232 bytes subset <- remove_invalid(poa) object.size(subset) #> 1173232 bytes"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/simplify_shapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplify shapes of a GTFS file — simplify_shapes","title":"Simplify shapes of a GTFS file — simplify_shapes","text":"Remove points shapes GTFS file order reduce size. uses Douglas-Peucker algorithm internally.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/simplify_shapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplify shapes of a GTFS file — simplify_shapes","text":"","code":"simplify_shapes(gtfs_data, tol = 0)"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/simplify_shapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplify shapes of a GTFS file — simplify_shapes","text":"gtfs_data list data.tables read using gtfs2gps::read_gtfs(). tol Numerical tolerance value used Douglas-Peucker algorithm. default value 0, means data lost.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/simplify_shapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplify shapes of a GTFS file — simplify_shapes","text":"GTFS data whose shapes subset input data.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/test_gtfs_freq.html","id":null,"dir":"Reference","previous_headings":"","what":"Test whether a GTFS feed is frequency based — test_gtfs_freq","title":"Test whether a GTFS feed is frequency based — test_gtfs_freq","text":"Test whether GTFS feed frequency based whether presents detailed time table routes trip ids.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/test_gtfs_freq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test whether a GTFS feed is frequency based — test_gtfs_freq","text":"","code":"test_gtfs_freq(gtfs)"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/test_gtfs_freq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test whether a GTFS feed is frequency based — test_gtfs_freq","text":"gtfs GTFS data set stored memory list data.tables/data.frames.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/test_gtfs_freq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test whether a GTFS feed is frequency based — test_gtfs_freq","text":"string \"frequency\" \"simple\".","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/write_gtfs.html","id":null,"dir":"Reference","previous_headings":"","what":"Write GTFS data into a zip file — write_gtfs","title":"Write GTFS data into a zip file — write_gtfs","text":"Write GTFS stored memory list data.tables zipped GTFS feed. function overwrites zip file exists.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/write_gtfs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write GTFS data into a zip file — write_gtfs","text":"","code":"write_gtfs(gtfs, zipfile, overwrite = TRUE, quiet = FALSE)"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/write_gtfs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write GTFS data into a zip file — write_gtfs","text":"gtfs GTFS data set stored memory list data.tables/data.frames. zipfile pathname .zip file saved GTFS data. overwrite logical. Whether overwrite existing .zip file. Defaults TRUE. quiet logical. Whether hide log messages progress bars. Defaults TRUE.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/write_gtfs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write GTFS data into a zip file — write_gtfs","text":"status value returned external zip command, invisibly.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/reference/write_gtfs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write GTFS data into a zip file — write_gtfs","text":"","code":"# read a gtfs.zip to memory poa <- read_gtfs(system.file(\"extdata/poa.zip\", package = \"gtfs2gps\")) |>   gtfstools::filter_by_shape_id(\"T2-1\") |>   filter_single_trip() #> Unzipped the following files to /tmp/Rtmpj4RNaK/gtfsio: #>   * agency.txt #>   * calendar.txt #>   * routes.txt #>   * shapes.txt #>   * stop_times.txt #>   * stops.txt #>   * trips.txt #> Reading agency #> Reading calendar #> Reading routes #> Reading shapes #> Reading stop_times #> Reading stops #> Reading trips  # write GTFS data into a zip file write_gtfs(poa, paste0(tempdir(), \"/mypoa.zip\")) #> Writing text files to /tmp/Rtmpj4RNaK/gtfsio1b5e7f6c29fd #>   - Writing agency.txt #>   - Writing calendar.txt #>   - Writing routes.txt #>   - Writing shapes.txt #>   - Writing stop_times.txt #>   - Writing stops.txt #>   - Writing trips.txt #> GTFS object successfully zipped to /tmp/Rtmpj4RNaK/mypoa.zip"},{"path":"https://ipeagit.github.io/gtfs2gps/dev/news/index.html","id":"gtfs2gps-v21-2","dir":"Changelog","previous_headings":"","what":"gtfs2gps v2.1-2","title":"gtfs2gps v2.1-2","text":"CRAN release: 2024-10-08 puts package back CRAN remove {magrittr} Suggests Clarifies documentation default behavior parameter ncores. closes #271. parallel = FALSE, argument ignored. parallel = TRUE, default function uses available cores minus one.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/news/index.html","id":"gtfs2gps-v21-1","dir":"Changelog","previous_headings":"","what":"gtfs2gps v2.1-1","title":"gtfs2gps v2.1-1","text":"CRAN release: 2023-04-28 Filter functions removed package gtftools alredy implements Function gtfs2gps now uses parallel = TRUE default. Function gtfs2gps now uses gtfstools::frequencies_to_stop_times() convert. frequency-based GTFS feeds stop times processing data. New argument quiet gtfs2gps() Removed readr, pbapply, lwgeom magrittr package dependencies.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/news/index.html","id":"gtfs2gps-v20-3","dir":"Changelog","previous_headings":"","what":"gtfs2gps v2.0-3","title":"gtfs2gps v2.0-3","text":"Saving units using argument filepath gtfs2gps().","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/news/index.html","id":"gtfs2gps-v20-1","dir":"Changelog","previous_headings":"","what":"gtfs2gps v2.0-1","title":"gtfs2gps v2.0-1","text":"CRAN release: 2022-03-05 Imports gtfstools package. Fixing CRAN error warning related vignette. function adjust_speed() now change low speed (1.000000e-12 [km/h]) values indicate situation stopped vehicle. Closed 249.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/news/index.html","id":"gtfs2gps-v20-1-1","dir":"Changelog","previous_headings":"","what":"gtfs2gps v2.0-1","title":"gtfs2gps v2.0-1","text":"CRAN release: 2022-03-05 gtfs2gps() now prints message alerting trips negative speed values output. Closes #172. Fixing small bugs output gtfs2gps().","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/news/index.html","id":"gtfs2gps-v20-0","dir":"Changelog","previous_headings":"","what":"gtfs2gps v2.0-0","title":"gtfs2gps v2.0-0","text":"CRAN release: 2022-02-22 gtfs2gps() now creates two points stop arrival departure exist. Speed travel time now calculated considering departure_ arrival_time columns. travel statistics output table (speed, dist, cumdist, cumtime) given point now calculated relation previous point. details documentation gtfs2gps() function. Names output columns gtfs2gps() updated New function adjust_arrival_departure() allow users set minimum time dis/embarking times stop. New function adjust_speed() fix outlier speeds replace missing speed values speed set user average speed system. timestamp values updated accordingly. Fixing several small errors output gtfs2gps(), breaks compatibility previous versions gtfs2gps package.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/news/index.html","id":"gtfs2gps-v15-4","dir":"Changelog","previous_headings":"","what":"gtfs2gps v1.5-4","title":"gtfs2gps v1.5-4","text":"CRAN release: 2021-09-06 Fixed CRAN bugs Fixed small bug prevented creating departure times correctly","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/news/index.html","id":"gtfs2gps-v15","dir":"Changelog","previous_headings":"","what":"gtfs2gps v1.5","title":"gtfs2gps v1.5","text":"Fixed update trip_number attribute. affects output gps_as_sflinestring(). Closes #189. Imports gtfsio package, used read_gtfs() write_gtfs() functions. Closes #191. New parameter snap_method added gtfs2gps(). Function filter_single_trip() now also filters stop_times table. Closes #195. Change default spatial_resolution gtfs2gps() 50m 100m. Closes #202.","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/news/index.html","id":"gtfs2gps-v13-2","dir":"Changelog","previous_headings":"","what":"gtfs2gps v1.3-2","title":"gtfs2gps v1.3-2","text":"CRAN release: 2020-11-05 New function merge GTFS feeds. Closes #34 New pkgdown website. https://ipeagit.github.io/gtfs2gps/ . Closes #146 Distance 1st point GPS trip now start distance zero. Closes #136 changes parallel execution conform new future standards. closes #55 Improve time filter filter_day_period. Closes #89 147 Improved documentation spatial_resolution parameter. Closes #116","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/news/index.html","id":"gtfs2gps-v13-0","dir":"Changelog","previous_headings":"","what":"gtfs2gps v1.3-0","title":"gtfs2gps v1.3-0","text":"CRAN release: 2020-09-15 Use progress bar progressr. Closes #142 Handling units measurement Speeding algorithms","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/news/index.html","id":"gtfs2gps-v12-1","dir":"Changelog","previous_headings":"","what":"gtfs2gps v1.2-1","title":"gtfs2gps v1.2-1","text":"CRAN release: 2020-06-12 Allowing read gtfs files without calendar/agency New verifications create better feedback user","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/news/index.html","id":"gtfs2gps-v12-0","dir":"Changelog","previous_headings":"","what":"gtfs2gps v1.2-0","title":"gtfs2gps v1.2-0","text":"CRAN release: 2020-05-28 Processing mixed detailed frequency-based GTFS files Small changes gps_as_sflinestring() due new GDAL Function simplify shapes","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/news/index.html","id":"gtfs2gps-v11-0","dir":"Changelog","previous_headings":"","what":"gtfs2gps v1.1-0","title":"gtfs2gps v1.1-0","text":"CRAN release: 2020-04-12 New function append_height(), create height column GPS data Update related newest versions lwgeom sf (#112) Replacing sf_multipoint sf_point gps_as_sf() keep data","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/news/index.html","id":"gtfs2gps-v10-7","dir":"Changelog","previous_headings":"","what":"gtfs2gps v1.0-7","title":"gtfs2gps v1.0-7","text":"CRAN release: 2020-04-01 Removing bugs found CRAN automatic tests","code":""},{"path":"https://ipeagit.github.io/gtfs2gps/dev/news/index.html","id":"gtfs2gps-v10-5","dir":"Changelog","previous_headings":"","what":"gtfs2gps v1.0-5","title":"gtfs2gps v1.0-5","text":"CRAN release: 2020-03-16 Launch gtfs2gps v1.0-5 CRAN 2020-03-16","code":""}]
